# Docker-specific configuration
spring.application.name=resource-sizing-service

# Server configuration for container
server.port=8080

# Actuator configuration for Docker
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.health.diskspace.enabled=true
management.health.ping.enabled=true

# Metrics export for container monitoring
management.prometheus.metrics.export.enabled=true
management.endpoint.prometheus.access=unrestricted

# Application configuration optimized for containers
app.employee.default-count=${APP_EMPLOYEE_DEFAULT_COUNT:100}
app.employee.default-string-size=${APP_EMPLOYEE_DEFAULT_STRING_SIZE:512}

# Memory simulation configuration from environment variables
app.memory.cache.ttl-seconds=${APP_MEMORY_CACHE_TTL_SECONDS:300}
app.memory.cache.max-size=${APP_MEMORY_CACHE_MAX_SIZE:1000}

# Memory scenario configurations
app.memory.scenarios.light.count=${APP_MEMORY_SCENARIOS_LIGHT_COUNT:50}
app.memory.scenarios.light.string-size=${APP_MEMORY_SCENARIOS_LIGHT_STRING_SIZE:256}
app.memory.scenarios.medium.count=${APP_MEMORY_SCENARIOS_MEDIUM_COUNT:200}
app.memory.scenarios.medium.string-size=${APP_MEMORY_SCENARIOS_MEDIUM_STRING_SIZE:1024}
app.memory.scenarios.heavy.count=${APP_MEMORY_SCENARIOS_HEAVY_COUNT:500}
app.memory.scenarios.heavy.string-size=${APP_MEMORY_SCENARIOS_HEAVY_STRING_SIZE:4096}
app.memory.scenarios.extreme.count=${APP_MEMORY_SCENARIOS_EXTREME_COUNT:1000}
app.memory.scenarios.extreme.string-size=${APP_MEMORY_SCENARIOS_EXTREME_STRING_SIZE:8192}

# Logging configuration for containers
logging.level.com.loadtesting=INFO
logging.level.root=WARN
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
